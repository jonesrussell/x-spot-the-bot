Project: X Spot The Bot Edge Extension
Description: A browser extension that identifies potential bot accounts in X (Twitter) notifications using behavioral analysis.

IMPORTANT NOTES:
- TypeScript module system: Use 'es2022' (newest concrete version as of 2024, despite it being 2024) instead of 'esnext' or specific node versions
- TypeScript version: Using 5.7.2 - check for newer versions
- Node.js compatibility: Tested with Node.js v22.12.0
- Known deprecation warnings:
  - [DEP0180] fs.Stats constructor is deprecated (from ts-node's ESM resolver)
  - Not our code - it's in ts-node/dist-raw/node-internal-modules-esm-resolve.js
  - Can be ignored as it's a ts-node internal issue

Bot Detection Rules:
- Probability threshold: >= 0.6 for high probability bots
- Score components:
  - No followers/following: 0.3
  - Username patterns: up to 0.5 combined
  - Display name similarity: 0.2
- Maximum total score: 0.9
- Suspicious patterns:
  - Random alphanumeric (0.3): ^[a-z0-9]{8,}$
  - Many numbers (0.2): [0-9]{4,}
  - Bot keywords (0.3): bot|spam|[0-9]+[a-z]+[0-9]+
  - Random suffix (0.2): [a-z]+[0-9]{4,}$
  - Numeric suffix (0.2): [0-9]{4,}$
  - Random letters (0.2): [A-Z]{2,}[0-9]+

Core Project Structure:
- src/
  - content/index.ts: Main content script with BotDetector
  - services/
    - dom-extractor.ts: Handles DOM operations and data extraction
    - profile-analyzer.ts: Analyzes profiles for bot-like behavior
    - storage.ts: Manages local storage and interaction history
    - ui-manager.ts: Handles UI elements and styling
  - types/profile.ts: TypeScript interfaces
  - icons/generate-icons.ts: Icon generation utilities
  - manifest.json: Extension manifest
- scripts/
  - build.ts: Build script for copying files
  - generate-icons.ts: Icon generation script

Technical Requirements:
- TypeScript with strict type checking
- ESM modules with proper extensions (.js for imports)
- Vite for bundling
- Edge extension APIs (chrome.* namespace)
- MutationObserver for real-time notification monitoring

Build Configuration:
- tsconfig.json: ES2022 modules, Node moduleResolution
- vite.config.ts: Content script bundling
- package.json: ESM module type

Current Focus:
- Profile analysis (username patterns, follower counts)
- DOM structure parsing for X's notification page
- Local storage for interaction history
- Real-time notification monitoring
- Duplicate detection prevention

Coding Standards:
- Use TypeScript interfaces for type definitions
- Maintain single responsibility principle (SRP)
- Add debug logging with [XBot:Category] prefix
- Handle DOM operations safely with null checks
- Follow Edge extension best practices

Dependencies (current versions):
- typescript: 5.7.2
- vite: 6.0.6
- @types/chrome: 0.0.287
- @types/node: 22.10.2
- ts-node: 10.9.2
- canvas: 3.0.0
- @rollup/wasm-node: 4.29.1
- prettier: 3.4.2
- prettier-plugin-organize-imports: 3.2.4 (4.1.0 available) 